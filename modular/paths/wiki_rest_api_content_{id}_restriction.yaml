get:
  tags:
    - Content restrictions
  summary: Get restrictions
  description: |-
    Returns the restrictions on a piece of content.

    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    Permission to view the content.
  operationId: getRestrictions
  parameters:
    - name: id
      in: path
      description: The ID of the content to be queried for its restrictions.
      required: true
      schema:
        type: string
    - name: expand
      in: query
      description: >-
        A multi-value parameter indicating which properties of the content

        restrictions to expand. By default, the following objects are expanded:

        `restrictions.user`, `restrictions.group`.


        - `restrictions.user` returns the piece of content that the restrictions
        are

        applied to.

        - `restrictions.group` returns the piece of content that the
        restrictions are

        applied to.

        - `content` returns the piece of content that the restrictions are

        applied to.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - restrictions.user
            - read.restrictions.user
            - update.restrictions.user
            - restrictions.group
            - read.restrictions.group
            - update.restrictions.group
            - content
    - name: start
      in: query
      description: The starting index of the users and groups in the returned restrictions.
      schema:
        minimum: 0
        type: integer
        format: int32
        default: 0
    - name: limit
      in: query
      description: |-
        The maximum number of users and the maximum number of groups, in the
        returned restrictions, to return per page. Note, this may be restricted
        by fixed system limits.
      schema:
        minimum: 0
        type: integer
        format: int32
        default: 100
  responses:
    '200':
      description: Returned if the requested restrictions are returned.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ContentRestrictionArray.yaml
    '404':
      description: |-
        Returned if;

        - There is no content with the given ID.
        - The calling user does not have permission to view the content.
      content: {}
  security:
    - oAuthDefinitions:
        - read:confluence-content.all
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - read:confluence-content.all
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - read:content-details:confluence
  x-atlassian-connect-scope: READ
put:
  tags:
    - Content restrictions
  summary: Update restrictions
  description: |-
    Updates restrictions for a piece of content. This removes the existing
    restrictions and replaces them with the restrictions in the request.

    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    Permission to edit the content.
  operationId: updateRestrictions
  parameters:
    - name: id
      in: path
      description: The ID of the content to update restrictions for.
      required: true
      schema:
        type: string
    - name: expand
      in: query
      description: >-
        A multi-value parameter indicating which properties of the content

        restrictions (returned in response) to expand.


        - `restrictions.user` returns the piece of content that the restrictions
        are

        applied to. Expanded by default.

        - `restrictions.group` returns the piece of content that the
        restrictions are

        applied to. Expanded by default.

        - `content` returns the piece of content that the restrictions are

        applied to.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - restrictions.user
            - read.restrictions.user
            - update.restrictions.user
            - restrictions.group
            - read.restrictions.group
            - update.restrictions.group
            - content
  requestBody:
    description: The updated restrictions for the content.
    content:
      application/json:
        schema:
          $ref: ../components/schemas/ContentRestrictionAddOrUpdateArray.yaml
    required: true
  responses:
    '200':
      description: Returned if the requested restrictions are updated.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ContentRestrictionArray.yaml
    '404':
      description: |-
        Returned if;

        - There is no content with the given ID.
        - The calling user does not have permission to update restrictions
        for the content.
      content: {}
  security:
    - oAuthDefinitions:
        - write:confluence-content
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - write:confluence-content
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - read:content-details:confluence
        - write:content.restriction:confluence
  x-codegen-request-body-name: body
  x-atlassian-connect-scope: WRITE
post:
  tags:
    - Content restrictions
  summary: Add restrictions
  description: |-
    Adds restrictions to a piece of content. Note, this does not change any
    existing restrictions on the content.

    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    Permission to edit the content.
  operationId: addRestrictions
  parameters:
    - name: id
      in: path
      description: The ID of the content to add restrictions to.
      required: true
      schema:
        type: string
    - name: expand
      in: query
      description: >-
        A multi-value parameter indicating which properties of the content

        restrictions (returned in response) to expand.


        - `restrictions.user` returns the piece of content that the restrictions
        are

        applied to. Expanded by default.

        - `restrictions.group` returns the piece of content that the
        restrictions are

        applied to. Expanded by default.

        - `content` returns the piece of content that the restrictions are

        applied to.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - restrictions.user
            - read.restrictions.user
            - update.restrictions.user
            - restrictions.group
            - read.restrictions.group
            - update.restrictions.group
            - content
  requestBody:
    description: The restrictions to be added to the content.
    content:
      application/json:
        schema:
          $ref: ../components/schemas/ContentRestrictionAddOrUpdateArray.yaml
    required: true
  responses:
    '200':
      description: Returned if the requested restrictions are added.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ContentRestrictionArray.yaml
    '404':
      description: |-
        Returned if;

        - There is no content with the given ID.
        - The calling user does not have permission to add restrictions to
        the content.
      content: {}
  security:
    - oAuthDefinitions:
        - write:confluence-content
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - write:confluence-content
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - read:content-details:confluence
        - write:content.restriction:confluence
  x-codegen-request-body-name: body
  x-atlassian-connect-scope: WRITE
delete:
  tags:
    - Content restrictions
  summary: Delete restrictions
  description: |-
    Removes all restrictions (read and update) on a piece of content.

    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    Permission to edit the content.
  operationId: deleteRestrictions
  parameters:
    - name: id
      in: path
      description: The ID of the content to remove restrictions from.
      required: true
      schema:
        type: string
    - name: expand
      in: query
      description: >-
        A multi-value parameter indicating which properties of the content

        restrictions (returned in response) to expand.


        - `restrictions.user` returns the piece of content that the restrictions
        are

        applied to. Expanded by default.

        - `restrictions.group` returns the piece of content that the
        restrictions are

        applied to. Expanded by default.

        - `content` returns the piece of content that the restrictions are

        applied to.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - restrictions.user
            - read.restrictions.user
            - update.restrictions.user
            - restrictions.group
            - read.restrictions.group
            - update.restrictions.group
            - content
  responses:
    '200':
      description: Returned if the restrictions are removed.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ContentRestrictionArray.yaml
    '400':
      description: Returned if any of the above validation rules are violated
      content: {}
    '403':
      description: |-
        Returned if the calling user does not have permission to alter the
        restrictions on the content.
      content: {}
    '404':
      description: |-
        Returned if;

        - There is no content with the given ID.
        - The calling user does not have permission to view the content.
      content: {}
  security:
    - oAuthDefinitions:
        - write:confluence-content
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - write:confluence-content
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - read:content-details:confluence
        - write:content.restriction:confluence
  x-atlassian-connect-scope: DELETE
