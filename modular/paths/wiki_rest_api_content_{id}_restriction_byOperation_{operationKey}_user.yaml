get:
  tags:
    - Content restrictions
  summary: Get content restriction status for user
  description: >-
    Returns whether the specified content restriction applies to a user.

    For example, if a page with `id=123` has a `read` restriction for a user
    with an account ID of

    `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`, the following request will
    return `true`:


    `/wiki/rest/api/content/123/restriction/byOperation/read/user?accountId=384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`


    Note that a response of `true` does not guarantee that the user can view the
    page, as it does not account for

    account-inherited restrictions, space permissions, or even product access.
    For more

    information, see [Confluence
    permissions](https://confluence.atlassian.com/x/_AozKw).


    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:

    Permission to view the content.
  operationId: getContentRestrictionStatusForUser
  parameters:
    - name: id
      in: path
      description: The ID of the content that the restriction applies to.
      required: true
      schema:
        type: string
    - name: operationKey
      in: path
      description: The operation that is restricted.
      required: true
      schema:
        type: string
    - $ref: ../components/parameters/userLookupKey.yaml
    - $ref: ../components/parameters/userLookupUsername.yaml
    - $ref: ../components/parameters/userLookupAccountId.yaml
  responses:
    '200':
      description: |-
        Return true if the content restriction applies to the user. The response
        body will be empty.
      content: {}
    '404':
      description: |-
        Returned if;

        - There is no content with the given ID.
        - The calling user does not have permission to view the content.
        - An invalid operation or user is specified.
      content: {}
  security:
    - oAuthDefinitions:
        - read:confluence-content.all
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - read:confluence-content.all
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - read:content.restriction:confluence
  x-atlassian-connect-scope: READ
put:
  tags:
    - Content restrictions
  summary: Add user to content restriction
  description: |-
    Adds a user to a content restriction. That is, grant read or update
    permission to the user for a piece of content.

    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    Permission to edit the content.
  operationId: addUserToContentRestriction
  parameters:
    - name: id
      in: path
      description: The ID of the content that the restriction applies to.
      required: true
      schema:
        type: string
    - name: operationKey
      in: path
      description: The operation that the restriction applies to.
      required: true
      schema:
        type: string
    - $ref: ../components/parameters/userLookupKey.yaml
    - $ref: ../components/parameters/userLookupUsername.yaml
    - $ref: ../components/parameters/userLookupAccountId.yaml
  responses:
    '200':
      description: |-
        Returned if the user is added to the content restriction. The response
        body will be empty.
      content: {}
    '400':
      description: |-
        Returned if;

        - Provided restrictions are invalid
      content: {}
    '404':
      description: |-
        Returned if;

        - There is no content with the given ID.
        - The calling user does not have permission to view the content.
        - An invalid operation or group is specified.
      content: {}
  security:
    - oAuthDefinitions:
        - write:confluence-content
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - write:confluence-content
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - write:content.restriction:confluence
  x-atlassian-connect-scope: WRITE
delete:
  tags:
    - Content restrictions
  summary: Remove user from content restriction
  description: |-
    Removes a group from a content restriction. That is, remove read or update
    permission for the group for a piece of content.

    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    Permission to edit the content.
  operationId: removeUserFromContentRestriction
  parameters:
    - name: id
      in: path
      description: The ID of the content that the restriction applies to.
      required: true
      schema:
        type: string
    - name: operationKey
      in: path
      description: The operation that the restriction applies to.
      required: true
      schema:
        type: string
        enum:
          - read
          - update
    - $ref: ../components/parameters/userLookupKey.yaml
    - $ref: ../components/parameters/userLookupUsername.yaml
    - $ref: ../components/parameters/userLookupAccountId.yaml
  responses:
    '200':
      description: >-
        Returned if the user is removed from the content restriction. The
        response

        body will be empty.
      content: {}
    '404':
      description: |-
        Returned if;

        - There is no content with the given ID.
        - The calling user does not have permission to view the content.
        - An invalid operation or group is specified.
      content: {}
  security:
    - oAuthDefinitions:
        - write:confluence-content
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - write:confluence-content
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - write:content.restriction:confluence
  x-atlassian-connect-scope: WRITE
