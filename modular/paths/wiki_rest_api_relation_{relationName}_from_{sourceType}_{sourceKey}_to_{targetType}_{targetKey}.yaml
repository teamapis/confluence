get:
  tags:
    - Relation
  summary: Find relationship from source to target
  description: |-
    Find whether a particular type of relationship exists from a source
    entity to a target entity. Note, relationships are one way.

    For example, you can use this method to find whether the current user has
    selected a particular page as a favorite (i.e. 'save for later'):
    `GET /wiki/rest/api/relation/favourite/from/user/current/to/content/123`

    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    Permission to view both the target entity and source entity.
  operationId: getRelationship
  parameters:
    - name: relationName
      in: path
      description: >-
        The name of the relationship. This method supports the 'favourite'

        (i.e. 'save for later') relationship as well as any other relationship

        types created via [Create
        relationship](#api-wiki-rest-api-relation-relationname-from-sourcetype-sourcekey-to-targettype-targetkey-put).
      required: true
      schema:
        type: string
    - name: sourceType
      in: path
      description: |-
        The source entity type of the relationship. This must be 'user', if
        the `relationName` is 'favourite'.
      required: true
      schema:
        type: string
        enum:
          - user
          - content
          - space
    - name: sourceKey
      in: path
      description: >-
        - The identifier for the source entity:


        - If `sourceType` is `user`, then specify either `current` (logged-in
        user), the user key of the user, or

        the account ID of the user. Note that the user key has been deprecated
        in favor of the account ID for this parameter. See the

        [migration
        guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)

        for details.

        - If `sourceType` is 'content', then specify the content ID.

        - If `sourceType` is 'space', then specify the space key.
      required: true
      schema:
        type: string
    - name: targetType
      in: path
      description: |-
        The target entity type of the relationship. This must be 'space' or
        'content', if the `relationName` is 'favourite'.
      required: true
      schema:
        type: string
        enum:
          - user
          - content
          - space
    - name: targetKey
      in: path
      description: >-
        The identifier for the target entity:


        - If `targetType` is `user`, then specify either `current` (logged-in
        user), the user key of the user, or

        the account ID of the user. Note that the user key has been deprecated
        in favor of the account ID for this parameter. See the

        [migration
        guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)

        for details.

        - If `targetType` is 'content', then specify the content ID.

        - If `targetType` is 'space', then specify the space key.
      required: true
      schema:
        type: string
    - name: sourceStatus
      in: query
      description: |-
        The status of the source. This parameter is only used when the
        `sourceType` is 'content'.
      schema:
        type: string
    - name: targetStatus
      in: query
      description: |-
        The status of the target. This parameter is only used when the
        `targetType` is 'content'.
      schema:
        type: string
    - name: sourceVersion
      in: query
      description: |-
        The version of the source. This parameter is only used when the
        `sourceType` is 'content' and the `sourceStatus` is 'historical'.
      schema:
        type: integer
        format: int32
    - name: targetVersion
      in: query
      description: |-
        The version of the target. This parameter is only used when the
        `targetType` is 'content' and the `targetStatus` is 'historical'.
      schema:
        type: integer
        format: int32
    - name: expand
      in: query
      description: |-
        A multi-value parameter indicating which properties of the response
        object to expand.

        - `relationData` returns information about the relationship, such as
        who created it and when it was created.
        - `source` returns the source entity.
        - `target` returns the target entity.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - relationData
            - source
            - target
  responses:
    '200':
      description: Returned if the relationship exists.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/Relation.yaml
    '400':
      description: Returned if the request is invalid.
      content: {}
    '401':
      description: |-
        Returned if the authentication credentials are incorrect or missing
        from the request.
      content: {}
    '403':
      description: |-
        Returned if the user does not have permission to view the
        relationship.
      content: {}
    '404':
      description: Returned if the relationship does not exist.
      content: {}
  security:
    - oAuthDefinitions:
        - read:confluence-content.summary
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - read:confluence-content.summary
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - read:relation:confluence
        - read:content-details:confluence
  x-atlassian-connect-scope: READ
put:
  tags:
    - Relation
  summary: Create relationship
  description: >-
    Creates a relationship between two entities (user, space, content). The

    'favourite' relationship is supported by default, but you can use this
    method

    to create any type of relationship between two entities.


    For example, the following method creates a 'sibling' relationship between

    two pieces of content:

    `GET /wiki/rest/api/relation/sibling/from/content/123/to/content/456`


    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:

    Permission to access the Confluence site ('Can use' global permission).
  operationId: createRelationship
  parameters:
    - name: relationName
      in: path
      description: |-
        The name of the relationship. This method supports the 'favourite'
        (i.e. 'save for later') relationship. You can also specify any other
        value for this parameter to create a custom relationship type.
      required: true
      schema:
        type: string
    - name: sourceType
      in: path
      description: |-
        The source entity type of the relationship. This must be 'user', if
        the `relationName` is 'favourite'.
      required: true
      schema:
        type: string
        enum:
          - user
          - content
          - space
    - name: sourceKey
      in: path
      description: |-
        - The identifier for the source entity:

        - If `sourceType` is 'user', then specify either 'current' (logged-in
          user) or the user key.
        - If `sourceType` is 'content', then specify the content ID.
        - If `sourceType` is 'space', then specify the space key.
      required: true
      schema:
        type: string
    - name: targetType
      in: path
      description: |-
        The target entity type of the relationship. This must be 'space' or
        'content', if the `relationName` is 'favourite'.
      required: true
      schema:
        type: string
        enum:
          - user
          - content
          - space
    - name: targetKey
      in: path
      description: |-
        - The identifier for the target entity:

        - If `sourceType` is 'user', then specify either 'current' (logged-in
          user) or the user key.
        - If `sourceType` is 'content', then specify the content ID.
        - If `sourceType` is 'space', then specify the space key.
      required: true
      schema:
        type: string
    - name: sourceStatus
      in: query
      description: |-
        The status of the source. This parameter is only used when the
        `sourceType` is 'content'.
      schema:
        type: string
    - name: targetStatus
      in: query
      description: |-
        The status of the target. This parameter is only used when the
        `targetType` is 'content'.
      schema:
        type: string
    - name: sourceVersion
      in: query
      description: |-
        The version of the source. This parameter is only used when the
        `sourceType` is 'content' and the `sourceStatus` is 'historical'.
      schema:
        type: integer
        format: int32
    - name: targetVersion
      in: query
      description: |-
        The version of the target. This parameter is only used when the
        `targetType` is 'content' and the `targetStatus` is 'historical'.
      schema:
        type: integer
        format: int32
  responses:
    '200':
      description: Returned if the relationship is created.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/Relation.yaml
    '400':
      description: Returned if the request is invalid.
      content: {}
    '401':
      description: |-
        Returned if the authentication credentials are incorrect or missing
        from the request.
      content: {}
    '403':
      description: Returned if the user does not have permission to use Confluence.
      content: {}
    '404':
      description: Returned if the user, space or content could not be found.
      content: {}
  security:
    - oAuthDefinitions:
        - write:confluence-content
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - write:confluence-content
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - read:relation:confluence
        - read:space:confluence
        - read:user:confluence
        - read:content:confluence
        - write:relation:confluence
  x-atlassian-connect-scope: WRITE
delete:
  tags:
    - Relation
  summary: Delete relationship
  description: |-
    Deletes a relationship between two entities (user, space, content).

    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    Permission to access the Confluence site ('Can use' global permission).
    For favourite relationships, the current user can only delete their own
    favourite relationships. A space administrator can delete favourite
    relationships for any user.
  operationId: deleteRelationship
  parameters:
    - name: relationName
      in: path
      description: The name of the relationship.
      required: true
      schema:
        type: string
    - name: sourceType
      in: path
      description: |-
        The source entity type of the relationship. This must be 'user', if
        the `relationName` is 'favourite'.
      required: true
      schema:
        type: string
        enum:
          - user
          - content
          - space
    - name: sourceKey
      in: path
      description: |-
        - The identifier for the source entity:

        - If `sourceType` is 'user', then specify either 'current' (logged-in
          user) or the user key.
        - If `sourceType` is 'content', then specify the content ID.
        - If `sourceType` is 'space', then specify the space key.
      required: true
      schema:
        type: string
    - name: targetType
      in: path
      description: |-
        The target entity type of the relationship. This must be 'space' or
        'content', if the `relationName` is 'favourite'.
      required: true
      schema:
        type: string
        enum:
          - user
          - content
          - space
    - name: targetKey
      in: path
      description: |-
        - The identifier for the target entity:

        - If `sourceType` is 'user', then specify either 'current' (logged-in
          user) or the user key.
        - If `sourceType` is 'content', then specify the content ID.
        - If `sourceType` is 'space', then specify the space key.
      required: true
      schema:
        type: string
    - name: sourceStatus
      in: query
      description: |-
        The status of the source. This parameter is only used when the
        `sourceType` is 'content'.
      schema:
        type: string
    - name: targetStatus
      in: query
      description: |-
        The status of the target. This parameter is only used when the
        `targetType` is 'content'.
      schema:
        type: string
    - name: sourceVersion
      in: query
      description: |-
        The version of the source. This parameter is only used when the
        `sourceType` is 'content' and the `sourceStatus` is 'historical'.
      schema:
        type: integer
        format: int32
    - name: targetVersion
      in: query
      description: |-
        The version of the target. This parameter is only used when the
        `targetType` is 'content' and the `targetStatus` is 'historical'.
      schema:
        type: integer
        format: int32
  responses:
    '204':
      description: |-
        Returned if the relationship is deleted or the relationship didn't
        exist.
      content: {}
    '400':
      description: Returned if the request is invalid.
      content: {}
    '401':
      description: |-
        Returned if the authentication credentials are incorrect or missing
        from the request.
      content: {}
    '403':
      description: |-
        Returned if the user does not have permission to delete the
        relationship.
      content: {}
    '404':
      description: Returned if the user, space or content could not be found.
      content: {}
  security:
    - oAuthDefinitions:
        - write:confluence-content
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - write:confluence-content
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - write:relation:confluence
  x-atlassian-connect-scope: WRITE
