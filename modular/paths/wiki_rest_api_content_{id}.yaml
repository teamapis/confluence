get:
  tags:
    - Content
  summary: Get content by ID
  description: >-
    Returns a single piece of content, like a page or a blog post.


    By default, the following objects are expanded: `space`, `history`,
    `version`.


    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:

    Permission to view the content. If the content is a blog post, 'View'
    permission

    for the space is required.
  operationId: getContentById
  parameters:
    - name: id
      in: path
      description: |-
        The ID of the content to be returned. If you don't know the content ID,
        use [Get content](#api-content-get) and filter the results.
      required: true
      schema:
        type: string
    - name: status
      in: query
      description: |-
        Filter the results to a set of content based on their status.
        If set to `any`, content with any status is returned. Note, the
        `historical` status is currently not supported.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        default:
          - current
        enum:
          - current
          - trashed
          - deleted
          - historical
          - draft
          - any
    - name: version
      in: query
      description: The version number of the content to be returned.
      schema:
        type: integer
        format: int32
    - name: embeddedContentRender
      in: query
      description: >-
        The version of embedded content (e.g. attachments) to render.


        - <code>current</code> renders the latest version of the embedded
        content.

        - <code>version-at-save</code> renders the version of the embedded
        content

        at the time of save.
      schema:
        type: string
        default: current
        enum:
          - current
          - version-at-save
    - $ref: ../components/parameters/contentExpandWithSubExpandLimit.yaml
    - name: trigger
      in: query
      description: >-
        If set to `viewed`, the request will trigger a 'viewed' event for the
        content.

        When this event is triggered, the page/blogpost will appear on the
        'Recently visited'

        tab of the user's Confluence dashboard.
      schema:
        type: string
        enum:
          - viewed
  responses:
    '200':
      description: Returned if the requested content is returned.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/Content.yaml
    '400':
      description: |-
        Returned if;
        - The content id is invalid.
        - The sub-expansions limit exceeds.
      content: {}
    '401':
      description: >-
        Returned if the authentication credentials are incorrect or missing from
        the request.
      content: {}
    '403':
      description: Returned if the calling user can not view the content.
      content: {}
    '404':
      description: |-
        Returned if;

        - There is no content with the given ID.
        - The requesting user does not have permission to view the content.
      content: {}
  security:
    - oAuthDefinitions:
        - read:confluence-content.summary
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - read:confluence-content.summary
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - read:content-details:confluence
  x-atlassian-connect-scope: READ
put:
  tags:
    - Content
  summary: Update content
  description: |-
    Updates a piece of content. Use this method to update the title or body
    of a piece of content, change the status, change the parent page, and more.

    Note, updating draft content is currently not supported.

    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    Permission to update the content.
  operationId: updateContent
  parameters:
    - name: id
      in: path
      description: The ID of the content to be updated.
      required: true
      schema:
        type: string
    - name: status
      in: query
      description: |-
        The updated status of the content. Use this parameter to change the
        status of a piece of content without passing the entire request body.
      schema:
        type: string
        default: current
        enum:
          - current
          - trashed
          - deleted
          - historical
          - draft
    - name: conflictPolicy
      in: query
      description: |-
        The action that should be taken when conflicts are discovered.
        Only used when publishing a draft page.
      schema:
        type: string
        default: abort
        enum:
          - abort
  requestBody:
    description: The updated content.
    content:
      application/json:
        schema:
          $ref: ../components/schemas/ContentUpdate.yaml
    required: true
  responses:
    '200':
      description: Returned if the content is updated.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/Content.yaml
    '400':
      description: >-
        Returned if;


        - The request body is missing required parameters (version, type,
        title).

        - The type property has been set incorrectly.
      content: {}
    '401':
      description: |-
        Returned if the authentication credentials are incorrect or missing
        from the request.
      content: {}
    '403':
      description: >-
        Returned if the calling user can not update the content with specified
        id.
      content: {}
    '404':
      description: >-
        Returned if a draft with current content cannot be found when setting
        the status

        parameter to draft and the content status is current.
      content: {}
    '409':
      description: |-
        Returned if;

        - The page is a draft (draft pages cannot be updated).
        - The version property has not been set correctly for the content
        type.
      content: {}
    '501':
      description: >-
        Indicates that the server does not support the functionality needed to
        serve the request.

        For example,


        - trying to publish edit draft and passing content status as historical.
      content: {}
  security:
    - oAuthDefinitions:
        - write:confluence-content
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - write:confluence-content
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - read:content-details:confluence
        - write:content:confluence
  x-codegen-request-body-name: content
  x-atlassian-connect-scope: WRITE
delete:
  tags:
    - Content
  summary: Delete content
  description: |-
    Moves a piece of content to the space's trash or purges it from the trash,
    depending on the content's type and status:

    - If the content's type is `page` or `blogpost` and its status is `current`,
    it will be trashed.
    - If the content's type is `page` or `blogpost` and its status is `trashed`,
    the content will be purged from the trash and deleted permanently. Note,
    you must also set the `status` query parameter to `trashed` in your request.
    - If the content's type is `comment` or `attachment`, it will be deleted
    permanently without being trashed.

    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    'Delete' permission for the space that the content is in.
  operationId: deleteContent
  parameters:
    - name: id
      in: path
      description: The ID of the content to be deleted.
      required: true
      schema:
        type: string
    - name: status
      in: query
      description: >-
        Set this to `trashed`, if the content's status is `trashed` and you want
        to purge it.
      schema:
        type: string
  responses:
    '204':
      description: Returned if the content is successfully trashed or purged.
      content: {}
    '400':
      description: Returned if the content id is invalid.
      content: {}
    '401':
      description: |-
        Returned if the authentication credentials are incorrect or missing
        from the request.
      content: {}
    '403':
      description: >-
        Returned if the calling user can not delete the content with specified
        id.
      content: {}
    '404':
      description: |-
        Returned if;

        - There is no content with the given ID.
        - The requesting user does not have permission to trash or purge the
        content.
      content: {}
  security:
    - oAuthDefinitions:
        - write:confluence-content
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - write:confluence-content
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - delete:content:confluence
  x-atlassian-connect-scope: DELETE
