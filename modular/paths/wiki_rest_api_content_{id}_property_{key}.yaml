get:
  tags:
    - Content properties
  summary: Get content property
  description: >-
    Returns a content property for a piece of content. For more information, see

    [Confluence entity
    properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).


    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:

    'View' permission for the space, and permission to view the content if it is
    a page.
  operationId: getContentProperty
  parameters:
    - name: id
      in: path
      description: The ID of the content to be queried for the property.
      required: true
      schema:
        type: string
    - name: key
      in: path
      description: The key of the content property.
      required: true
      schema:
        type: string
    - name: expand
      in: query
      description: |-
        A multi-value parameter indicating which properties of the content to
        expand. By default, the `version` object is expanded.

        - `content` returns the content that the property is stored against.
        - `version` returns information about the version of the property, such
        as the version number, when it was created, etc.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - content
            - version
    - name: status
      in: query
      description: >-
        Filter the results to a set of content based on their status. If set to
        `any`,

        content with any status is returned. By default it will fetch current
        and archived statuses `?status=current&status=archived`.

        All supported statuses


        - any

        - archived

        - current

        - deleted

        - draft

        - trashed
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        default:
          - current
          - archived
        enum:
          - any
          - archived
          - current
          - deleted
          - draft
          - trashed
  responses:
    '200':
      description: Returned if the content property is returned.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ContentProperty.yaml
    '404':
      description: |-
        Returned if;

        - The calling user does not have permission to view the content.
        - There is no content with the given ID.
        - There is no property with the given key.
      content: {}
  security:
    - oAuthDefinitions:
        - read:confluence-props
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - read:confluence-props
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - read:content-details:confluence
  x-atlassian-connect-scope: READ
put:
  tags:
    - Content properties
  summary: Update content property
  description: >-
    Updates an existing content property. This method will also create a new

    property for a piece of content, if the property key does not exist and

    the property version is 1. For more information about content properties,
    see

    [Confluence entity
    properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).


    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:

    Permission to update the content.
  operationId: updateContentProperty
  parameters:
    - name: id
      in: path
      description: The ID of the content that the property belongs to.
      required: true
      schema:
        type: string
    - name: key
      in: path
      description: The key of the property.
      required: true
      schema:
        type: string
  requestBody:
    description: The content property being updated.
    content:
      application/json:
        schema:
          $ref: ../components/schemas/ContentPropertyUpdate.yaml
    required: true
  responses:
    '200':
      description: Returned if the content property is created.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ContentProperty.yaml
    '400':
      description: |-
        Returned if;

        - The content already a property with the given key.
        - The key is too long.
        - The key is empty.
      content: {}
    '403':
      description: |-
        Returned if the user does not have permission to edit the content
        with the given ID.
      content: {}
    '404':
      description: >-
        Returned if;


        - There is no content with the given ID.

        - The calling user does not have permission to view the content.

        - There is no property with the given key and the version number is not
        1.
      content: {}
    '409':
      description: Returned if the property version is not correctly incremented.
      content: {}
    '413':
      description: Returned if the value is too long.
      content: {}
  security:
    - oAuthDefinitions:
        - write:confluence-props
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - write:confluence-props
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - read:content.property:confluence
        - write:content.property:confluence
  x-codegen-request-body-name: body
  x-atlassian-connect-scope: WRITE
post:
  tags:
    - Content properties
  summary: Create content property for key
  description: >-
    Creates a property for an existing piece of content. For more information

    about content properties, see [Confluence entity
    properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).


    This is the same as [Create content property](#api-content-id-property-post)

    except that the key is specified as a path parameter instead of in the

    request body.


    Content properties can also be added when creating a new piece of content

    by including them in the `metadata.properties` of the request.


    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:

    Permission to update the content.
  operationId: createContentPropertyForKey
  parameters:
    - name: id
      in: path
      description: The ID of the content to add the property to.
      required: true
      schema:
        type: string
    - name: key
      in: path
      description: The key of the content property. Required.
      required: true
      schema:
        type: string
  requestBody:
    description: The content property to be created.
    content:
      application/json:
        schema:
          $ref: ../components/schemas/ContentPropertyCreateNoKey.yaml
    required: true
  responses:
    '200':
      description: Returned if the content property is created.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ContentProperty.yaml
    '400':
      description: |-
        Returned if;

        - The content already has a property with the given key.
        - The key is too long.
        - The key is empty.
      content: {}
    '403':
      description: |-
        Returned if the user does not have permission to edit the content
        with the given ID.
      content: {}
    '413':
      description: Returned if the value is too long.
      content: {}
  security:
    - oAuthDefinitions:
        - write:confluence-props
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - write:confluence-props
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - read:content.property:confluence
        - write:content.property:confluence
  x-codegen-request-body-name: body
  x-atlassian-connect-scope: WRITE
delete:
  tags:
    - Content properties
  summary: Delete content property
  description: >-
    Deletes a content property. For more information about content properties,
    see

    [Confluence entity
    properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).


    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:

    Permission to update the content.
  operationId: deleteContentProperty
  parameters:
    - name: id
      in: path
      description: The ID of the content that the property belongs to.
      required: true
      schema:
        type: string
    - name: key
      in: path
      description: The key of the property.
      required: true
      schema:
        type: string
  responses:
    '204':
      description: Returned if the content property is deleted.
      content: {}
    '403':
      description: |-
        Returned if the user does not have permission to delete content
        with the given ID.
      content: {}
    '404':
      description: |-
        Returned if;

        - There is no content with the given ID.
        - The calling user does not have permission to view the content.
      content: {}
  security:
    - oAuthDefinitions:
        - write:confluence-props
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - write:confluence-props
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - write:content.property:confluence
  x-atlassian-connect-scope: WRITE
