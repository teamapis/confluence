post:
  tags:
    - Content - attachments
  summary: Update attachment data
  description: >-
    Updates the binary data of an attachment, given the attachment ID, and

    optionally the comment and the minor edit field.


    This method is essentially the same as [Create or update
    attachments](#api-content-id-child-attachment-put),

    except that it matches the attachment ID rather than the name.


    Note, you must set a `X-Atlassian-Token: nocheck` header on the request

    for this method, otherwise it will be blocked. This protects against XSRF

    attacks, which is necessary as this method accepts multipart/form-data.


    The media type 'multipart/form-data' is defined in [RFC
    7578](https://www.ietf.org/rfc/rfc7578.txt).

    Most client libraries have classes that make it easier to implement

    multipart posts, like the
    [MultipartEntityBuilder](https://hc.apache.org/httpcomponents-client-5.1.x/current/httpclient5/apidocs/)

    Java class provided by Apache HTTP Components.


    Note, according to [RFC
    7578](https://tools.ietf.org/html/rfc7578#section-4.5),

    in the case where the form data is text,

    the charset parameter for the "text/plain" Content-Type may be used to

    indicate the character encoding used in that part. In the case of this

    API endpoint, the `comment` body parameter should be sent with
    `type=text/plain`

    and `charset=utf-8` values. This will force the charset to be UTF-8.


    Example: This curl command updates an attachment (id='att456') that is
    attached

    to a piece of content (id='123') with a comment and `minorEdits`=true.


    ``` bash

    curl -D- \
      -u admin:admin \
      -X POST \
      -H 'X-Atlassian-Token: nocheck' \
      -F 'file=@"example.txt"' \
      -F 'minorEdit="true"' \
      -F 'comment="Example attachment comment"; type=text/plain; charset=utf-8' \
      http://myhost/rest/api/content/123/child/attachment/att456/data
    ```

    **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:

    Permission to update the content.
  operationId: updateAttachmentData
  parameters:
    - name: id
      in: path
      description: The ID of the content that the attachment is attached to.
      required: true
      schema:
        type: string
    - name: attachmentId
      in: path
      description: The ID of the attachment to update.
      required: true
      schema:
        type: string
  requestBody:
    content:
      multipart/form-data:
        schema:
          required:
            - file
            - minorEdit
          properties:
            file:
              type: string
              description: |-
                The relative location and name of the attachment to be added to
                the content.
              format: binary
            comment:
              type: string
              description: >-
                The comment for the attachment that is being added.

                If you specify a comment, then every file must have a comment
                and

                the comments must be in the same order as the files.
                Alternatively,

                don't specify any comments.
              format: binary
            minorEdit:
              type: string
              description: >-
                If `minorEdits` is set to 'true', no notification email or
                activity stream

                will be generated when the attachment is added to the content.
              format: binary
    required: true
  responses:
    '200':
      description: Returned if the attachment is updated.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/Content.yaml
    '400':
      description: Returned if the attachment id is invalid.
      content: {}
    '404':
      description: Returned if no attachment is found for the attachment ID.
      content: {}
  security:
    - oAuthDefinitions:
        - write:confluence-file
    - basicAuth: []
  x-atlassian-oauth2-scopes:
    - scheme: oAuthDefinitions
      state: Current
      scopes:
        - write:confluence-file
    - scheme: oAuthDefinitions
      state: Beta
      scopes:
        - read:content-details:confluence
        - write:attachment:confluence
  x-atlassian-connect-scope: WRITE
